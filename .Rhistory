newData = prepData(BlacktipB,coordNames = NULL)
newData
fit1 = fitHMM(newData,nbStates=2,dist=list(ODBA="gamma"),Par0 = list(ODBA=c(.1,.3,1,1)))
fit1
plot(m1)
plot(fit1)
fit1
fit1
plotStates(fit1)
heatmap(fit1)
plotPR(fit1)
BlacktipB %>% ggplot(aes(Time,ODBA)) + geom_line()
library(ggplot2)
BlacktipB %>% ggplot(aes(Time,ODBA)) + geom_line()
head(BlacktipB)
max(BlacktipB$Time)
BlacktipB %>% filter(Time == "2013-07-10") %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% filter(Time == as.Date("2013-07-10")) %>% ggplot(aes(Time,ODBA)) + geom_line()
head(BlacktipB)
BlacktipB %>% filter(Time == as.Date("2013-07-10",format = "%Y-%m-%d")) %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% filter(Time == as.Date("2013-07-10",format = "%Y-%m-%d"))# %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% filter(Time == "2013-07-10")# %>% ggplot(aes(Time,ODBA)) + geom_line()
as.Date("2013-07-10")
class(as.Date("2013-07-10"))
BlacktipB$Time[1]
class(as.POSIXct("2013-07-10"))
as.POSIXct("2013-07-10")
BlacktipB %>% filter(Time == as.POSIXct("2013-07-10"))# %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% filter(Time < "2013-07-10 14:46:00 EDT")# %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% filter(Time < as.POSIXct("2013-07-10 14:46:00 EDT"))# %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% filter(Time < as.POSIXct("2013-07-10 14:46:00"))# %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% filter(Time < as.POSIXct("2013-07-10 14:46:00",format = "%m/%d/%Y %H:%M"))# %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% filter(Time < as.POSIXct("2013-07-10 14:46:00",format = "%Y-%m-%d %H:%M"))# %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% filter(Time < as.POSIXct("2013-07-10 14:46:00",format = "%Y-%m-%d %H:%M:%S"))# %>% ggplot(aes(Time,ODBA)) + geom_line()
library(lubridate)
BlacktipB %>% mutate(Time2 =  day(Time))# %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% mutate(day = day(Time)) %>% filter(day == 13) %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB = BlacktipB %>% mutate(day = day(Time)) %>% filter(day == 13)
BlacktipB %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB = BlacktipB %>% filter(ODBA <= 2.0)
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
#clean_names() %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) #%>% group_by(Time) %>%
BlacktipB = BlacktipB %>% mutate(day = day(Time),
hour = hour(Time)) %>%
filter(day == 13)
BlacktipB %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB = BlacktipB %>% filter(ODBA <= 2.0)
BlacktipB %>% ggplot(aes(Time,ODBA)) + geom_line()
newData = prepData(BlacktipB,coordNames = NULL,covNames = "hour")
newData
plot(newData)
hist(newData$ODBA)
hist(newData$ODBA,breaks = 40)
hist(newData$ODBA,breaks = 80)
hist(newData$ODBA)
hist(newData$ODBA,breaks=80)
fit1 = fitHMM(newData,nbStates=2,dist=list(ODBA="gamma"),Par0 = list(ODBA=c(.1,.3,1,1)))
fit1
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour = hour(Time))
BlacktipB %>% filter(day == 13) %>% ggplot(aes(Time,ODBA)) + geom_line()
BlacktipB = BlacktipB %>% filter(ODBA <= 2.0)
head(newData)
head(BlacktipB)
BlacktipB %>% filter(ODBA>2.0)
newData = prepData(BlacktipB,coordNames = NULL,covNames = "hour")
head(newData)
fit1 = fitHMM(newData,nbStates=2,dist=list(ODBA="gamma"),Par0 = list(ODBA=c(.1,.3,1,1)))
fit1
AIC(fit1)
BIC(fit1)
#Checking for pseudo-residuals
plot(fi1)
#Checking for pseudo-residuals
plot(fit1)
plot(fit1,breaks = 80)
fit1.plot = plot(fit1,breaks = 80)
fit1.plot
fit1.plot$ask
plot(fit1.plot)
lines(fit1.plot)
print(fit1.plot)
#Checking for pseudo-residuals
plotPR(fit1)
AIC(fit1)
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour = hms(Time))
head(BlacktipB)
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour = hm(Time))
head(BlacktipB)
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour = format(Time, format = "%H:M"))
head(BlacktipB)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour = format(Time, format = "%H:%M"))
head(BlacktipB)
BlacktipB$hour
BlacktipB$hour[1]
BlacktipB$hour[1] + 1
class(BlacktipB$hour[1])
head(BlacktipB)
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour = as.POSIXct(format(Time, format = "%H:%M")))
head(BlacktipB)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour =  hm(format(Time, format = "%H:%M")))
head(BlacktipB)
BlacktipB = BlacktipB %>% filter(ODBA <= 2.0)
newData = prepData(BlacktipB,coordNames = NULL,covNames = "hour")
hist(newData$ODBA,breaks=80)
#MLE es bastante parecido; a lo mejor hay que tratar con distintos valores para Par0
fit1
fit1 = fitHMM(newData,nbStates=2,dist=list(ODBA="gamma"),Par0 = list(ODBA=c(.1,.3,1,1)))
#MLE es bastante parecido; a lo mejor hay que tratar con distintos valores para Par0
fit1
AIC(fit1)
formula = cosinor(hour, period = 86400)
library(rgdal)
formula = cosinor(hour, period = 86400)
library(rgdal)
library(momentuHMM)
formula = cosinor(hour, period = 86400)
?cosino
?cosinor
formula = ~ cosinor(hour, period = 86400)
Par0_fit2 <- getPar0(model=fit1, formula=formula)
BlacktipB$hour@year
BlacktipB$hour@month
BlacktipB$hour@hour
BlacktipB$hour@.Data
BlacktipB$hour@minute
BlacktipB$hour[1]
BlacktipB$hour[1]*60
hour(BlacktipB$hour[1])
hour(BlacktipB$hour[1])*60
hour(BlacktipB$hour[1])*60*60
hour(BlacktipB$hour[1])*60*60 + minute(BlacktipB$hour[1])
BlacktipB$hour[1]
minute(BlacktipB$hour[1])
(hour(BlacktipB$hour[1])*60 + minute(BlacktipB$hour[1]))*60
second(BlacktipB$Time[1])
seconds(BlacktipB$Time[1])
BlacktipB$Time[1]
seconds(format(BlacktipB$Time[1], format = "%H:%M"))
format(BlacktipB$Time[1], format = "%H:%M")
seconds(format(BlacktipB$Time[1], format = "%H:%M"))
hm(format(BlacktipB$Time[1], format = "%H:%M"))
seconds(hm(format(BlacktipB$Time[1], format = "%H:%M")))
seconds(hm(format(BlacktipB$Time[1], format = "%H:%M"))) + 1
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour =  seconds(hm(format(Time, format = "%H:%M"))))
BlacktipB = BlacktipB %>% filter(ODBA <= 2.0)
newData = prepData(BlacktipB,coordNames = NULL,covNames = "hour")
formula = ~ cosinor(hour, period = 86400)
Par0_fit2 <- getPar0(model=fit1, formula=formula)
head()
head(BlacktipB)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour =  as.integer(seconds(hm(format(Time, format = "%H:%M")))))
head(BlacktipB)
formula = ~ cosinor(hour, period = 86400)
newData = prepData(BlacktipB,coordNames = NULL,covNames = "hour")
Par0_fit2 <- getPar0(model=fit1, formula=formula)
fit1 = fitHMM(newData,nbStates=2,dist=list(ODBA="gamma"),Par0 = list(ODBA=c(.1,.3,1,1)))
#MLE es bastante parecido; a lo mejor hay que tratar con distintos valores para Par0
fit1
Par0_fit2 <- getPar0(model=fit1, formula=formula)
fit2 = fitHMM(newData,nbStates=2,dist=list(ODBA="gamma"),Par0 = list(ODBA=c(.1,.3,1,1)),
formula=formula)
fit2
plot(fit2)
fit1.plot
class(fit1.plot)
class(fit1.plot[[1]])
fit1.plot[[1]]
fit1.plot[[2]]
setwd("~/Vianey/Fall_2022/Day3")
jpeg("fit1.jpg", width = 350, height = 350)
plot(fit1,breaks = 80)
dev.off()
jpeg("fit1.jpg", width = 700, height = 700)
plot(fit1,breaks = 80)
dev.off()
tigerShark <- read_csv("tigershark_depthchange10min.csv")
library(readr)
library(ggplot2)
library(dplyr)
tigerShark <- read_csv("tigershark_depthchange10min.csv")
tigerShark <- read_csv("tigershark_depthchange10min.csv")
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) #%>%
library(lubridate)
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) #%>%
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) %>% select(hour)
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) %>%
#select(DateTime,hour)
ggplot(aes(x=hour,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M")))# %>%
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) %>%
#select(DateTime,hour)
ggplot(aes(x=minutes(),y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) %>%
#select(DateTime,hour)
ggplot(aes(x=minutes,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) %>%
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=minutes,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) %>%
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=minutes,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour = format(DateTime, format = "%H:%M")) %>%
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=hour,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour = format(DateTime, format = "%H:%M")) %>% select(DateTime,hour)
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) %>% select(DateTime,hour)
tigerShark %>% mutate(hour = as.Date(format(DateTime, format = "%H:%M"))) %>% select(DateTime,hour)
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) %>% select(DateTime,hour)
tigerShark %>% mutate(hour = hm(format(DateTime, format = "%H:%M"))) %>% #select(DateTime,hour)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=hour,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour = as.POSIXct(format(DateTime, format = "%H:%M"))) %>% select(DateTime,hour)
tigerShark %>% mutate(hour = as.POSIXct(format(DateTime, format = "%H:%M"), "%H:%M")) %>% select(DateTime,hour)
tigerShark %>% mutate(hour = as.POSIXct(DateTime, "%H:%M")) %>% select(DateTime,hour)
tigerShark %>% mutate(hour = strftime(DateTime, "%H:%M")) %>% select(DateTime,hour)
tigerShark %>% mutate(hour = strftime(DateTime, "%H:%M")) %>% #select(DateTime,hour)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=hour,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour = as.difftime(strftime(DateTime, "%H:%M"))) %>% select(DateTime,hour)
tigerShark %>% mutate(hour = as.numeric(strftime(DateTime, "%H:%M"))) %>% select(DateTime,hour)
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>% select(DateTime,hour)
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>% select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=minutes,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=minutes,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=minutes,y=Depth)) + facet_wrap(~days) + geom_line(labels = hours_labels)
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=hm(HST),y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=minutes,y=Depth)) + facet_wrap(~days) + geom_line()
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=minutes,y=Depth)) + facet_wrap(~days) + geom_line() +
scale_x_datetime(breaks= "1 hour", date_labels = "%H:%M")
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=HST,y=Depth)) + facet_wrap(~days) + geom_line() +
scale_x_datetime(breaks= "1 hour", date_labels = "%H:%M")
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=HST,y=Depth)) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "1 hour", date_labels = "%H:%M")
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=HST,y=Depth)) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "4 hour", date_labels = "%H:%M")
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=HST,y=Depth)) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "4 hour", date_labels = "%H:%M") + theme_minimal()
tigerShark %>% mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%# select(DateTime,hour_labels)
filter(days != 9) %>%
#select(DateTime,hour)
ggplot(aes(x=HST,y=Depth)) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "4 hour", date_labels = "%H:%M") + theme_minimal()
tigerShark %>% #mutate(hour_labels = hm(strftime(DateTime, "%H:%M"))) %>%
filter(days != 9) %>%
ggplot(aes(x=HST,y=Depth)) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "4 hour", date_labels = "%H:%M") + theme_minimal()
tigerShark %>%
filter(days != 9) %>%
ggplot(aes(x=HST,y=2*abs(Depth))) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "4 hour", date_labels = "%H:%M") + theme_minimal()
tigerShark %>% mutate(test = lag(Depth))
tigerShark %>% mutate(test = lag(Depth)) %>% select(Depth,test)
tigerShark %>% mutate(test = lead(Depth)) %>% select(Depth,test)
tigerShark %>% mutate(test = lead(Depth)) %>% select(Depth,test) %>% tail()
tigerShark %>% mutate(test = lag(Depth)) %>% select(Depth,test) %>% tail()
tigerShark %>% mutate(test = lag(Depth,default = 0)) %>% select(Depth,test)# %>% tail()
tigerShark %>% mutate(Change_depth = Depth - lag(Depth,default = 0)) %>% select(Depth,test)# %>% tail()
tigerShark %>% mutate(Change_depth = Depth - lag(Depth,default = 0)) %>% select(Depth,Change_depth)# %>% tail()
tigerShark %>% mutate(change_depth = Depth - lag(Depth,default = 0)) %>%
filter(days != 9) %>%
ggplot(aes(x=HST,y=2*abs(change_Depth))) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "4 hour", date_labels = "%H:%M") + theme_minimal()
tigerShark %>% mutate(change_depth = Depth - lag(Depth,default = 0)) %>%
filter(days != 9) %>%
ggplot(aes(x=HST,y=2*abs(change_depth))) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "4 hour", date_labels = "%H:%M") + theme_minimal()
tigerShark %>% mutate(change_depth = Depth - lag(Depth,default = 0)) %>%
filter(days != 9) %>%
ggplot(aes(x=HST,y=2*abs(change_depth))) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "4 hour", date_labels = "%H:%M") + theme_minimal()
tigerShark %>%
filter(days != 9) %>%
ggplot(aes(x=HST,y=Depth)) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "4 hour", date_labels = "%H:%M") + theme_minimal()
knitr::opts_chunk$set(warning = FALSE)
blacktipB
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour =  as.integer(seconds(hm(format(Time, format = "%H:%M")))))
BlacktipB = BlacktipB %>% group_by(Time) %>% mutate(sec = row_number()) %>% ungroup() %>%
mutate(sec = case_when(hour == 53160 ~ as.integer(sec + 55),
TRUE ~ sec),
hour = hour + sec,
group_10s = case_when(sec <= 10 ~ 1,
10 < sec & sec <= 20 ~ 2,
20 < sec & sec <= 30 ~ 3,
30 < sec & sec <= 40~ 4,
40 < sec & sec <= 50 ~ 5,
50 < sec & sec <= 60 ~ 6,
TRUE ~ -1),
group_30s = case_when(sec <= 30 ~ 1,
30 < sec & sec <= 60 ~ 2,
TRUE ~ -1)) %>%
group_by(Time,group_10s) %>% mutate(ODBA_mean_10s = mean(ODBA)) %>% ungroup() %>%
group_by(Time,group_30s) %>% mutate(ODBA_mean_30s = mean(ODBA)) %>% ungroup() %>%
group_by(Time) %>% mutate(ODBA_mean_60s = mean(ODBA)) %>%
mutate(hour_10s = floor((hour-1)/10+1),
hour_30s = floor((hour-1)/30+1),
hour_60s = floor((hour-1)/60+1))
BlacktipB_10s = BlacktipB %>% group_by(Time,group_10s) %>% filter(row_number() == 1)
BlacktipB_30s = BlacktipB %>% group_by(Time,group_30s) %>% filter(row_number() == 1)
BlacktipB_60s = BlacktipB %>% group_by(Time) %>% filter(row_number() == 1)
glimpse(BlacktipB)
BlacktipB %>% select(Time,Depth,ODBA,hour)
BlacktipB %>% select(Time,Depth,ODBA,hour)
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour =  as.integer(seconds(hm(format(Time, format = "%H:%M")))))
BlacktipB = BlacktipB %>% group_by(Time) %>% mutate(sec = row_number()) %>% ungroup() %>%
mutate(sec = case_when(hour_to_sec == 53160 ~ as.integer(sec + 55),
TRUE ~ sec),
hour_to_sec = hour_to_sec + sec,
group_10s = case_when(sec <= 10 ~ 1,
10 < sec & sec <= 20 ~ 2,
20 < sec & sec <= 30 ~ 3,
30 < sec & sec <= 40~ 4,
40 < sec & sec <= 50 ~ 5,
50 < sec & sec <= 60 ~ 6,
TRUE ~ -1),
group_30s = case_when(sec <= 30 ~ 1,
30 < sec & sec <= 60 ~ 2,
TRUE ~ -1)) %>%
group_by(Time,group_10s) %>% mutate(ODBA_mean_10s = mean(ODBA)) %>% ungroup() %>%
group_by(Time,group_30s) %>% mutate(ODBA_mean_30s = mean(ODBA)) %>% ungroup() %>%
group_by(Time) %>% mutate(ODBA_mean_60s = mean(ODBA)) %>%
mutate(hour_to_sec_10s = floor((hour_to_sec-1)/10+1),
hour_to_sec_30s = floor((hour_to_sec-1)/30+1),
hour_to_sec_60s = floor((hour_to_sec-1)/60+1))
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour_to_sec =  as.integer(seconds(hm(format(Time, format = "%H:%M")))))
BlacktipB = BlacktipB %>% group_by(Time) %>% mutate(sec = row_number()) %>% ungroup() %>%
mutate(sec = case_when(hour_to_sec == 53160 ~ as.integer(sec + 55),
TRUE ~ sec),
hour_to_sec = hour_to_sec + sec,
group_10s = case_when(sec <= 10 ~ 1,
10 < sec & sec <= 20 ~ 2,
20 < sec & sec <= 30 ~ 3,
30 < sec & sec <= 40~ 4,
40 < sec & sec <= 50 ~ 5,
50 < sec & sec <= 60 ~ 6,
TRUE ~ -1),
group_30s = case_when(sec <= 30 ~ 1,
30 < sec & sec <= 60 ~ 2,
TRUE ~ -1)) %>%
group_by(Time,group_10s) %>% mutate(ODBA_mean_10s = mean(ODBA)) %>% ungroup() %>%
group_by(Time,group_30s) %>% mutate(ODBA_mean_30s = mean(ODBA)) %>% ungroup() %>%
group_by(Time) %>% mutate(ODBA_mean_60s = mean(ODBA)) %>%
mutate(hour_to_sec_10s = floor((hour_to_sec-1)/10+1),
hour_to_sec_30s = floor((hour_to_sec-1)/30+1),
hour_to_sec_60s = floor((hour_to_sec-1)/60+1))
BlacktipB %>% select(Time,Depth,ODBA,hour_to_sec)
BlacktipB = BlacktipB %>% select(Time,Depth,ODBA,hour_to_sec)
#Solo en caso de ser necesario
#BlacktipB = BlacktipB %>% select(Time,Temp,Depth,hour,hour_10s,hour_30s,hour_60s,
#                     ODBA,
#                     ODBA_mean_10s,
#                     ODBA_mean_30s,
#                     ODBA_mean_60s)
saveRDS(BlacktipB,"BlacktipB_tidy.rds")
BlacktipB_10s
BlacktipB_10s = BlacktipB %>% group_by(Time,group_10s) %>% filter(row_number() == 1) %>%
select(Time,Depth,ODBA_mean_10s,hour_10s)
BlacktipB <- read_delim("C:/Users/marco/Downloads/BlacktipB_original.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
mutate(day = day(Time),hour_to_sec =  as.integer(seconds(hm(format(Time, format = "%H:%M")))))
BlacktipB = BlacktipB %>% group_by(Time) %>% mutate(sec = row_number()) %>% ungroup() %>%
mutate(sec = case_when(hour_to_sec == 53160 ~ as.integer(sec + 55),
TRUE ~ sec),
hour_to_sec = hour_to_sec + sec,
group_10s = case_when(sec <= 10 ~ 1,
10 < sec & sec <= 20 ~ 2,
20 < sec & sec <= 30 ~ 3,
30 < sec & sec <= 40~ 4,
40 < sec & sec <= 50 ~ 5,
50 < sec & sec <= 60 ~ 6,
TRUE ~ -1),
group_30s = case_when(sec <= 30 ~ 1,
30 < sec & sec <= 60 ~ 2,
TRUE ~ -1)) %>%
group_by(Time,group_10s) %>% mutate(ODBA_mean_10s = mean(ODBA)) %>% ungroup() %>%
group_by(Time,group_30s) %>% mutate(ODBA_mean_30s = mean(ODBA)) %>% ungroup() %>%
group_by(Time) %>% mutate(ODBA_mean_60s = mean(ODBA)) %>%
mutate(hour_to_sec_10s = floor((hour_to_sec-1)/10+1),
hour_to_sec_30s = floor((hour_to_sec-1)/30+1),
hour_to_sec_60s = floor((hour_to_sec-1)/60+1))
BlacktipB_10s = BlacktipB %>% group_by(Time,group_10s) %>% filter(row_number() == 1) %>%
select(Time,Depth,ODBA_mean_10s,hour_10s)
BlacktipB_10s
BlacktipB
BlacktipB_10s = BlacktipB %>% group_by(Time,group_10s) %>% filter(row_number() == 1) %>%
select(Time,Depth,ODBA_mean_10s,hour_to_sec_10s)
BlacktipB_10s
BlacktipB_10s = BlacktipB %>% group_by(Time,group_10s) %>% filter(row_number() == 1) %>%
ungroup() %>% select(Time,Depth,ODBA_mean_10s,hour_to_sec_10s)
BlacktipB_10s
BlacktipB_10s = BlacktipB %>% group_by(Time,group_10s) %>% filter(row_number() == 1) %>%
ungroup() %>% select(Time,Depth,ODBA_mean_10s,hour_to_sec_10s)
BlacktipB_30s = BlacktipB %>% group_by(Time,group_30s) %>% filter(row_number() == 1) %>%
ungroup() %>% select(Time,Depth,ODBA_mean_30s,hour_to_sec_30s)
BlacktipB_60s = BlacktipB %>% group_by(Time) %>% filter(row_number() == 1) %>%
ungroup() %>% select(Time,Depth,ODBA_mean_60s,hour_to_sec_60s)
BlacktipB_60s
#Solo en caso de ser necesario
#BlacktipB = BlacktipB %>% select(Time,Temp,Depth,hour,hour_10s,hour_30s,hour_60s,
#                     ODBA,
#                     ODBA_mean_10s,
#                     ODBA_mean_30s,
#                     ODBA_mean_60s)
saveRDS(BlacktipB,"BlacktipB_tidy.rds")
tigerShark %>%
filter(days != 9) %>%
ggplot(aes(x=HST,y=Depth)) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "8 hour", date_labels = "%H:%M") + theme_minimal()
tigerShark %>% mutate(change_depth = Depth - lag(Depth,default = 0)) %>%
filter(days != 9) %>%
ggplot(aes(x=HST,y=2*abs(change_depth))) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "8 hour", date_labels = "%H:%M") + theme_minimal()
tigerShark %>%
filter(days != 9) %>%
ggplot(aes(x=HST,y=Depth)) + facet_wrap(~days,scales = "free_x") + geom_line() +
scale_x_datetime(breaks= "8 hour", date_labels = "%H:%M") + theme_minimal()
